/*
 * Play with expressions.
 */


layout memory { base 250; limit 300; }
layout macro { base 250; limit 300; }
layout switch { base 250; limit 300; }

switch test_expressions {
    ~1 {
        Switch(test_constant);
        Switch(test_operators_1);
        Switch(test_operators_2);
        Switch(test_quest_colon);
        Switch(test_quest_colon_3);
    }
}

switch test_constant {
    SetString test_name[0] "test_constant"

    SetString test_name[1] ": 3 + 4"
    ~1 { result = 3 + 4; expect = 7; macro(check); }

    SetString test_name[1] ": 3 + 0b100"
    ~1 { result = 3 + 0b100; expect = 7; macro(check); }

    SetString test_name[1] ": 3 + 0xa"
    ~1 { result = 3 + 0xa; expect = 13; macro(check); }

    SetString test_name[1] ": 3 + 1.23"
    ~1 { result = 3 + 1.23; expect = 4.23; macro(check); }

    SetString test_name[1] ": 3 + 0.12"
    ~1 { result = 3 + 0.12; expect = 3.12; macro(check); }

    // Following produces 
    //      Unknown function: '.12'
    //      Context: '  = 100 3.12  Macro 100'
    //SetString test_name[1] ": 3 + .12"
    //~1 { result = 3 + .12; expect = 3.12; macro(check); }

    SetString test_name[1] ": 3 + 123."
    ~1 { result = 3 + 123.; expect = 126; macro(check); }
}

switch test_operators_1 {
    SetString test_name[0] "test_operators_1"

    SetString test_name[1] ": 0b1111 & 0b1001"
    ~1 { result = 0b1111 & 0b1001; expect = 9; macro(check); }

    SetString test_name[1] ": 0b1111 & ~0b1001"
    ~1 { result = 0b1111 & ~0b1001; expect = 6; macro(check); }

    SetString test_name[1] ": 0b10011 ^ 0b00110"
    ~1 { result = 0b10011 ^ 0b00110; expect = 21; macro(check); }

    SetString test_name[1] ": 0b10000 | 0b10"
    ~1 { result = 0b10000 | 0b10; expect = 18; macro(check); }

    SetString test_name[1] ": !3.14"
    ~1 { result = !3.14; expect = 0; macro(check); }

    SetString test_name[1] ": !!3.14"
    ~1 { result = !!3.14; expect = 1; macro(check); }

    SetString test_name[1] ": 1.2 * 0.1"
    ~1 { result = 1.2 * 0.1; expect = 0.12; macro(check); }

    SetString test_name[1] ": 10 / 2"
    ~1 { result = 10 / 2; expect = 5; macro(check); }

    SetString test_name[1] ": 5 % 2"
    ~1 { result = 5 % 2; expect = 1; macro(check); }

    SetString test_name[1] ": 5.2 - 1"
    ~1 { result = 5.2 - 1; expect = 4.2; macro(check); }

    SetString test_name[1] ": 2 << 1"
    ~1 { result = 2 << 1; expect = 4; macro(check); }

    SetString test_name[1] ": 8 >> 1"
    ~1 { result = 8 >> 1; expect = 4; macro(check); }
}

switch test_operators_2 {
    SetString test_name[0] "test_operators_2"

    SetString test_name[1] ": 5 < 7"
    ~1 { result = 5 < 7; expect = 1; macro(check); }

    SetString test_name[1] ": 5 < 3"
    ~1 { result = 5 < 3; expect = 0; macro(check); }

    SetString test_name[1] ": 3 <= 3"
    ~1 { result = 3 <= 3; expect = 1; macro(check); }

    SetString test_name[1] ": 3 <= 2"
    ~1 { result = 3 <= 2; expect = 0; macro(check); }

    SetString test_name[1] ": 5 > 7"
    ~1 { result = 5 > 7; expect = 0; macro(check); }

    SetString test_name[1] ": 5 > 5"
    ~1 { result = 5 > 5; expect = 0; macro(check); }

    SetString test_name[1] ": 5 > 3"
    ~1 { result = 5 > 1; expect = 1; macro(check); }

    SetString test_name[1] ": 5 >= 4"
    ~1 { result = 5 >= 4; expect = 1; macro(check); }

    SetString test_name[1] ": 5 >= 6"
    ~1 { result = 5 >= 6; expect = 0; macro(check); }

    SetString test_name[1] ": 5 == 5"
    ~1 { result = 5 == 5; expect = 1; macro(check); }

    SetString test_name[1] ": 5 == 6"
    ~1 { result = 5 == 6; expect = 0; macro(check); }

    SetString test_name[1] ": 5 != 5"
    ~1 { result = 5 != 5; expect = 0; macro(check); }

    SetString test_name[1] ": 5 != 6"
    ~1 { result = 5 != 6; expect = 1; macro(check); }
}

switch test_quest_colon {
    SetString test_name[0] "test_quest_colon"

    SetString test_name[1] ": true ?:"
    ~1 { expr = true(); result=macro(test_qc1); expect = 7; macro(check); }
    SetString test_name[1] ": true ?: qctemp1"
    ~1 { result = qctemp1; expect = 7; macro(check); }
    SetString test_name[1] ": false ?:"
    ~1 { expr = false(); result=macro(test_qc1); expect = 11; macro(check); }
    SetString test_name[1] ": false ?: qctemp1"
    ~1 { result = qctemp1; expect = 11; macro(check); }

    // Same test using ?:, side effects are visible.
    SetString test_name[1] ": true QuestColon"
    ~1 { expr = true(); result=macro(test_qc2); expect = 7; macro(check); }
    SetString test_name[1] ": true QuestColon qctemp1"
    ~1 { result = qctemp1; expect = 18; macro(check); }
    SetString test_name[1] ": false QuestColon"
    // <<< The following is a surprising result >>>
    ~1 { expr = false(); result=macro(test_qc2); expect = 18; macro(check); }
    SetString test_name[1] ": false QuestColon qctemp1"
    ~1 { result = qctemp1; expect = 18; macro(check); }
}

/* ?: with no side effects. */
switch test_quest_colon_3 {
    SetString test_name[0] "test_quest_colon_3"

    SetString test_name[1] ": true QuestColon_3"
    ~1 { expr = true(); result=macro(test_qc3); expect = 7; macro(check); }
    SetString test_name[1] ": true QuestColon_3 qctemp1"
    ~1 { result = qctemp1; expect = 7; macro(check); }
    SetString test_name[1] ": true QuestColon_3 qctemp2"
    ~1 { result = qctemp2; expect = 11; macro(check); }

    SetString test_name[1] ": false QuestColon_3"
    ~1 { expr = false(); result=macro(test_qc3); expect = 11; macro(check); }
    SetString test_name[1] ": false QuestColon_3 qctemp1"
    ~1 { result = qctemp1; expect = 7; macro(check); }
    SetString test_name[1] ": false QuestColon_3 qctemp2"
    ~1 { result = qctemp2; expect = 11; macro(check); }
}

var expr;
var qctemp1;
var qctemp2;

macro test_qc1 {
    qctemp1 = 0;
    expr ? qctemp1 += 7 : qctemp1 += 11;
}

/** ?: where the parameter expressions have side effects. Very weird. */
macro test_qc2 {
    qctemp1 = 0;
    QuestColon(expr, qctemp1 += 7, qctemp1 += 11);
}

/** ?: where the parameters have no side effects.
    Still weird, easier to understand.
 */
macro test_qc3 {
    qctemp1 = 0;
    qctemp2 = 0;
    QuestColon(expr, qctemp1 = 7, qctemp2 = 11);
}

//    SetString test_name[1] ": XXX"
//    ~1 { result = XXX; expect = XXX; macro(check); }
