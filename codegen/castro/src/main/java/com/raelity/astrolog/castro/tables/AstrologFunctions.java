package com.raelity.astrolog.castro.tables;

class AstrologFunctions
{
private Functions f;
AstrologFunctions(Functions f)
{
    this.f = f;
}

void createEntries()
{
    f.add("False", 0, "I_");
    f.add("True", 0, "I_");
    f.add("Int", 1, "I_I");
    f.add("Real", 1, "R_R");
    f.add("Type", 1, "I_E");
    f.add("Add", 2, "E_EE");
    f.add("Sub", 2, "E_EE");
    f.add("Mul", 2, "E_EE");
    f.add("Div", 2, "E_EE");
    f.add("Mod", 2, "E_EE");
    f.add("Pow", 2, "R_RR");
    f.add("Neg", 1, "E_E");
    f.add("Inc", 1, "E_E");
    f.add("Dec", 1, "E_E");
    f.add("Equ", 2, "I_EE");
    f.add("Neq", 2, "I_EE");
    f.add("Lt", 2, "I_EE");
    f.add("Gt", 2, "I_EE");
    f.add("Lte", 2, "I_EE");
    f.add("Gte", 2, "I_EE");
    f.add("Not", 1, "I_I");
    f.add("And", 2, "I_II");
    f.add("Or", 2, "I_II");
    f.add("Xor", 2, "I_II");
    f.add("Inv", 1, "I_I");
    f.add("<<", 2, "I_II");
    f.add(">>", 2, "I_II");
    f.add("Odd", 1, "I_I");
    f.add("Abs", 1, "E_E");
    f.add("Sgn", 1, "E_E");
    f.add("Sgn2", 1, "E_E");
    f.add("Min", 2, "E_EE");
    f.add("Max", 2, "E_EE");
    f.add("Tween", 3, "I_EEE");
    f.add("?:", 3, "E_IEE");
    f.add("Squ", 1, "E_E");
    f.add("Sqr", 1, "R_R");
    f.add("Dist", 2, "R_RR");
    f.add("Ln", 1, "R_R");
    f.add("Log10", 1, "R_R");
    f.add("Sin", 1, "R_R");
    f.add("Cos", 1, "R_R");
    f.add("Tan", 1, "R_R");
    f.add("Asin", 1, "R_R");
    f.add("Acos", 1, "R_R");
    f.add("Atan", 1, "R_R");
    f.add("Ang", 2, "R_RR");
    f.add("SinD", 1, "R_R");
    f.add("CosD", 1, "R_R");
    f.add("TanD", 1, "R_R");
    f.add("AsinD", 1, "R_R");
    f.add("AcosD", 1, "R_R");
    f.add("AtanD", 1, "R_R");
    f.add("AngD", 2, "R_RR");
    f.add("Floor", 1, "R_R");
    f.add("Fract", 1, "R_R");
    f.add("DMS", 3, "R_RRR");
    f.add("Rnd", 2, "I_II");
    f.add("Rgb", 3, "I_III");
    f.add("RgbR", 1, "I_I");
    f.add("RgbG", 1, "I_I");
    f.add("RgbB", 1, "I_I");
    f.add("Blend", 3, "I_IIR");
    f.add("Hue", 1, "I_R");
    f.add("Hue2", 1, "I_R");
    f.add("Char", 2, "I_II");
    f.add("Signs", 0, "I_");
    f.add("Objs", 0, "I_");
    f.add("Asps", 0, "I_");
    f.add("Mon", 0, "I_");
    f.add("Day", 0, "I_");
    f.add("Yea", 0, "I_");
    f.add("Tim", 0, "R_");
    f.add("Dst", 0, "R_");
    f.add("Zon", 0, "R_");
    f.add("Lon", 0, "R_");
    f.add("Lat", 0, "R_");
    f.add("Mon1", 0, "I_");
    f.add("Day1", 0, "I_");
    f.add("Yea1", 0, "I_");
    f.add("Tim1", 0, "R_");
    f.add("Dst1", 0, "R_");
    f.add("Zon1", 0, "R_");
    f.add("Lon1", 0, "R_");
    f.add("Lat1", 0, "R_");
    f.add("Mon2", 0, "I_");
    f.add("Day2", 0, "I_");
    f.add("Yea2", 0, "I_");
    f.add("Tim2", 0, "R_");
    f.add("Dst2", 0, "R_");
    f.add("Zon2", 0, "R_");
    f.add("Lon2", 0, "R_");
    f.add("Lat2", 0, "R_");
    f.add("Mon3", 0, "I_");
    f.add("Day3", 0, "I_");
    f.add("Yea3", 0, "I_");
    f.add("Tim3", 0, "R_");
    f.add("Dst3", 0, "R_");
    f.add("Zon3", 0, "R_");
    f.add("Lon3", 0, "R_");
    f.add("Lat3", 0, "R_");
    f.add("Mon4", 0, "I_");
    f.add("Day4", 0, "I_");
    f.add("Yea4", 0, "I_");
    f.add("Tim4", 0, "R_");
    f.add("Dst4", 0, "R_");
    f.add("Zon4", 0, "R_");
    f.add("Lon4", 0, "R_");
    f.add("Lat4", 0, "R_");
    f.add("Mon5", 0, "I_");
    f.add("Day5", 0, "I_");
    f.add("Yea5", 0, "I_");
    f.add("Tim5", 0, "R_");
    f.add("Dst5", 0, "R_");
    f.add("Zon5", 0, "R_");
    f.add("Lon5", 0, "R_");
    f.add("Lat5", 0, "R_");
    f.add("Mon6", 0, "I_");
    f.add("Day6", 0, "I_");
    f.add("Yea6", 0, "I_");
    f.add("Tim6", 0, "R_");
    f.add("Dst6", 0, "R_");
    f.add("Zon6", 0, "R_");
    f.add("Lon6", 0, "R_");
    f.add("Lat6", 0, "R_");
    f.add("MonN", 1, "I_I");
    f.add("DayN", 1, "I_I");
    f.add("YeaN", 1, "I_I");
    f.add("TimN", 1, "R_I");
    f.add("DstN", 1, "R_I");
    f.add("ZonN", 1, "R_I");
    f.add("LonN", 1, "R_I");
    f.add("LatN", 1, "R_I");
    f.add("MonL", 1, "I_I");
    f.add("DayL", 1, "I_I");
    f.add("YeaL", 1, "I_I");
    f.add("TimL", 1, "R_I");
    f.add("DstL", 1, "R_I");
    f.add("ZonL", 1, "R_I");
    f.add("LonL", 1, "R_I");
    f.add("LatL", 1, "R_I");
    f.add("MonS", 0, "I_");
    f.add("DayS", 0, "I_");
    f.add("YeaS", 0, "I_");
    f.add("TimS", 0, "R_");
    f.add("DstS", 0, "R_");
    f.add("ZonS", 0, "R_");
    f.add("LonS", 0, "R_");
    f.add("LatS", 0, "R_");
    f.add("MonT", 0, "I_");
    f.add("DayT", 0, "I_");
    f.add("YeaT", 0, "I_");
    f.add("TimT", 0, "R_");
    f.add("MonG", 0, "I_");
    f.add("DayG", 0, "I_");
    f.add("YeaG", 0, "I_");
    f.add("DstD", 0, "R_");
    f.add("ZonD", 0, "R_");
    f.add("LonD", 0, "R_");
    f.add("LatD", 0, "R_");
    f.add("ObjLon", 1, "R_I");
    f.add("ObjLat", 1, "R_I");
    f.add("ObjDir", 1, "R_I");
    f.add("ObjDirY", 1, "R_I");
    f.add("ObjDirL", 1, "R_I");
    f.add("ObjHouse", 1, "I_I");
    f.add("ObjLon1", 1, "R_I");
    f.add("ObjLat1", 1, "R_I");
    f.add("ObjDir1", 1, "R_I");
    f.add("ObjDirY1", 1, "R_I");
    f.add("ObjDirL1", 1, "R_I");
    f.add("ObjHouse1", 1, "I_I");
    f.add("ObjLon2", 1, "R_I");
    f.add("ObjLat2", 1, "R_I");
    f.add("ObjDir2", 1, "R_I");
    f.add("ObjDirY2", 1, "R_I");
    f.add("ObjDirL2", 1, "R_I");
    f.add("ObjHouse2", 1, "I_I");
    f.add("ObjLon3", 1, "R_I");
    f.add("ObjLat3", 1, "R_I");
    f.add("ObjDir3", 1, "R_I");
    f.add("ObjDirY3", 1, "R_I");
    f.add("ObjDirL3", 1, "R_I");
    f.add("ObjHouse3", 1, "I_I");
    f.add("ObjLon4", 1, "R_I");
    f.add("ObjLat4", 1, "R_I");
    f.add("ObjDir4", 1, "R_I");
    f.add("ObjDirY4", 1, "R_I");
    f.add("ObjDirL4", 1, "R_I");
    f.add("ObjHouse4", 1, "I_I");
    f.add("ObjLon5", 1, "R_I");
    f.add("ObjLat5", 1, "R_I");
    f.add("ObjDir5", 1, "R_I");
    f.add("ObjDirY5", 1, "R_I");
    f.add("ObjDirL5", 1, "R_I");
    f.add("ObjHouse5", 1, "I_I");
    f.add("ObjLon6", 1, "R_I");
    f.add("ObjLat6", 1, "R_I");
    f.add("ObjDir6", 1, "R_I");
    f.add("ObjDirY6", 1, "R_I");
    f.add("ObjDirL6", 1, "R_I");
    f.add("ObjHouse6", 1, "I_I");
    f.add("ObjLonN", 2, "R_II");
    f.add("ObjLatN", 2, "R_II");
    f.add("ObjDirN", 2, "R_II");
    f.add("ObjDirYN", 2, "R_II");
    f.add("ObjDirLN", 2, "R_II");
    f.add("ObjHouseN", 2, "I_II");
    f.add("ObjX", 1, "R_I");
    f.add("ObjY", 1, "R_I");
    f.add("ObjZ", 1, "R_I");
    f.add("ObjXN", 1, "R_I");
    f.add("ObjYN", 1, "R_I");
    f.add("ObjZN", 1, "R_I");
    f.add("ObjOn", 1, "I_I");
    f.add("ObjOnT", 1, "I_I");
    f.add("ObjOrb", 1, "R_I");
    f.add("ObjAdd", 1, "R_I");
    f.add("ObjInf", 1, "R_I");
    f.add("ObjInfT", 1, "R_I");
    f.add("ObjCol", 1, "I_I");
    f.add("ObjRul", 1, "I_I");
    f.add("ObjRul2", 1, "I_I");
    f.add("ObjRulS", 1, "I_I");
    f.add("ObjRulS2", 1, "I_I");
    f.add("ObjRulH", 1, "I_I");
    f.add("ObjRulH2", 1, "I_I");
    f.add("ObjExa", 1, "I_I");
    f.add("ObjRay", 1, "I_I");
    f.add("ObjDist", 1, "R_I");
    f.add("ObjYear", 1, "R_I");
    f.add("ObjDiam", 1, "R_I");
    f.add("ObjDay", 1, "R_I");
    f.add("AspAngle", 1, "R_I");
    f.add("AspOrb", 1, "R_I");
    f.add("AspInf", 1, "R_I");
    f.add("AspCol", 1, "I_I");
    f.add("Cusp", 1, "R_I");
    f.add("Cusp3D", 1, "R_I");
    f.add("Cusp1", 1, "R_I");
    f.add("Cusp3D1", 1, "R_I");
    f.add("Cusp2", 1, "R_I");
    f.add("Cusp3D2", 1, "R_I");
    f.add("Cusp3", 1, "R_I");
    f.add("Cusp3D3", 1, "R_I");
    f.add("Cusp4", 1, "R_I");
    f.add("Cusp3D4", 1, "R_I");
    f.add("HouseInf", 1, "R_I");
    f.add("PlusZone", 1, "I_I");
    f.add("SignRul", 1, "I_I");
    f.add("SignRul2", 1, "I_I");
    f.add("SignEso", 1, "I_I");
    f.add("SignEso2", 1, "I_I");
    f.add("SignHie", 1, "I_I");
    f.add("SignHie2", 1, "I_I");
    f.add("SignRay", 1, "I_I");
    f.add("SignRay2", 2, "I_II");
    f.add("RayCol", 1, "I_I");
    f.add("LonSign", 1, "I_R");
    f.add("LonDeg", 1, "R_R");
    f.add("LonHouse", 1, "I_R");
    f.add("LonHou3D", 2, "R_RR");
    f.add("LonDist", 2, "R_RR");
    f.add("LonDiff", 2, "R_RR");
    f.add("LonMid", 2, "R_RR");
    f.add("LonDecan", 1, "R_R");
    f.add("LonNavam", 1, "R_R");
    f.add("LonDwad", 1, "R_R");
    f.add("LonTerm", 2, "I_RI");
    f.add("DayWeek", 3, "I_III");
    f.add("JulianT", 0, "R_");
    f.add("LATLMT", 0, "R_");
    f.add("PolDist", 4, "R_RRRR");
    f.add("Oblique", 0, "R_");
    f.add("RAMC", 0, "R_");
    f.add("DeltaT", 0, "R_");
    f.add("SidDiff", 0, "R_");
    f.add("Nutation", 0, "R_");
    f.add("HouseSys", 0, "I_");
    f.add("AspLon", 3, "I_III");
    f.add("AspLon2", 3, "I_III");
    f.add("AspLat", 3, "I_III");
    f.add("AspLat2", 3, "I_III");
    f.add("GridNam", 2, "I_II");
    f.add("GridVal", 2, "R_II");
    f.add("DoGrid", 0, "I_");
    f.add("DoGrid2", 1, "I_I");
    f.add("ListCnt", 0, "I_");
    f.add("ListCur", 0, "I_");
    f.add("List1", 0, "I_");
    f.add("List2", 0, "I_");
    f.add("TiltXY", 2, "R_IR");
    f.add("Context", 0, "I_");
    f.add("Version", 0, "R_");
    f.add("=Obj", 4, "R_IIII");
    f.add("=Hou", 4, "R_IIII");
    f.add("_v3", 0, "I_");
    f.add("_v31", 0, "I_");
    f.add("_w1", 0, "I_");
    f.add("_aj", 0, "I_");
    f.add("_L1", 0, "I_");
    f.add("_L2", 0, "I_");
    f.add("_d1", 0, "I_");
    f.add("_EY", 0, "I_");
    f.add("_E01", 0, "I_");
    f.add("_E02", 0, "I_");
    f.add("_P1", 0, "I_");
    f.add("_N1", 0, "I_");
    f.add("_80", 0, "I_");
    f.add("_I1", 0, "I_");
    f.add("_zv", 0, "R_");
    f.add("_zf", 0, "R_");
    f.add("_A3", 0, "I_");
    f.add("_Ap", 0, "I_");
    f.add("_APP", 0, "I_");
    f.add("_b", 0, "I_");
    f.add("_b0", 0, "I_");
    f.add("_c", 0, "I_");
    f.add("_c3", 0, "I_");
    f.add("_c31", 0, "I_");
    f.add("_s", 0, "I_");
    f.add("_s0", 0, "I_");
    f.add("_s1", 0, "R_");
    f.add("_sr", 0, "I_");
    f.add("_sr0", 0, "I_");
    f.add("_h", 0, "I_");
    f.add("_p", 0, "I_");
    f.add("_p0", 0, "I_");
    f.add("_pd", 0, "R_");
    f.add("_pC", 0, "R_");
    f.add("_x", 0, "R_");
    f.add("_1", 0, "I_");
    f.add("_3", 0, "I_");
    f.add("_4", 0, "I_");
    f.add("_f", 0, "I_");
    f.add("_G", 0, "I_");
    f.add("_J", 0, "I_");
    f.add("_9", 0, "I_");
    f.add("_YT", 0, "I_");
    f.add("_YV", 0, "I_");
    f.add("_Yf", 0, "I_");
    f.add("_Yh", 0, "I_");
    f.add("_Ym", 0, "I_");
    f.add("_Ys", 0, "I_");
    f.add("_Ys1", 0, "R_");
    f.add("_Yn", 0, "I_");
    f.add("_Yn0", 0, "I_");
    f.add("_Yz0", 0, "R_");
    f.add("_Yu", 0, "I_");
    f.add("_Yu0", 0, "I_");
    f.add("_Yr", 0, "I_");
    f.add("_YC", 0, "I_");
    f.add("_YO", 0, "I_");
    f.add("_Y8", 0, "I_");
    f.add("_Ya", 0, "I_");
    f.add("_Yao", 0, "I_");
    f.add("_Yoo", 0, "I_");
    f.add("_Ycc", 0, "I_");
    f.add("_Yp", 0, "I_");
    f.add("_YZ", 0, "I_");
    f.add("_Yb", 0, "I_");
    f.add("_YR0", 1, "I_I");
    f.add("_YR1", 1, "I_I");
    f.add("_YR2", 1, "I_I");
    f.add("_YRZ", 1, "I_I");
    f.add("_YR7", 1, "I_I");
    f.add("_Y5I1", 0, "I_");
    f.add("_Y5I2", 0, "I_");
    f.add("_XI1", 0, "R_");
    f.add("_XI2", 0, "I_");
    f.add("_Xr", 0, "I_");
    f.add("_Xm", 0, "I_");
    f.add("_XT", 0, "I_");
    f.add("_Xi", 0, "I_");
    f.add("_Xuu", 0, "I_");
    f.add("_Xx", 0, "I_");
    f.add("_Xll", 0, "I_");
    f.add("_XA", 0, "I_");
    f.add("_XL", 0, "I_");
    f.add("_Xj", 0, "I_");
    f.add("_XF", 0, "I_");
    f.add("_XW0", 0, "I_");
    f.add("_Xee", 0, "I_");
    f.add("_XU", 0, "I_");
    f.add("_XC", 0, "I_");
    f.add("_XQ", 0, "I_");
    f.add("_XN", 0, "I_");
    f.add("_Xwx", 0, "I_");
    f.add("_Xwy", 0, "I_");
    f.add("_Xnn", 0, "I_");
    f.add("_Xs", 0, "I_");
    f.add("_XSS", 0, "I_");
    f.add("_XU0", 0, "I_");
    f.add("_XE1", 0, "I_");
    f.add("_XE2", 0, "I_");
    f.add("_XE", 0, "I_");
    f.add("_XL0", 0, "I_");
    f.add("_X1", 0, "I_");
    f.add("_Xv", 0, "I_");
    f.add("_XJJ", 0, "I_");
    f.add("_X8", 0, "I_");
    f.add("_XGx", 0, "R_");
    f.add("_XGy", 0, "R_");
    f.add("_XZ", 0, "I_");
    f.add("_YXG", 0, "I_");
    f.add("_YXGc", 0, "I_");
    f.add("_YXGu", 0, "I_");
    f.add("_YXGp", 0, "I_");
    f.add("_YXGl", 0, "I_");
    f.add("_YXGv", 0, "I_");
    f.add("_YXGe", 0, "I_");
    f.add("_YXe", 0, "I_");
    f.add("_YXa", 0, "I_");
    f.add("_YXf", 0, "I_");
    f.add("_YXft", 0, "I_");
    f.add("_YXfs", 0, "I_");
    f.add("_YXfh", 0, "I_");
    f.add("_YXfo", 0, "I_");
    f.add("_YXfa", 0, "I_");
    f.add("_YXfn", 0, "I_");
    f.add("_YXW", 0, "I_");
    f.add("_YXK", 1, "I_I");
    f.add("DCol", 1, "I_I");
    f.add("DDot", 2, "I_II");
    f.add("DSpot", 2, "I_II");
    f.add("DLine", 4, "I_IIII");
    f.add("DBox", 4, "I_IIII");
    f.add("DBlock", 4, "I_IIII");
    f.add("DCirc", 4, "I_IIII");
    f.add("DDisk", 4, "I_IIII");
    f.add("DText", 3, "I_III");
    f.add("DSign", 3, "I_III");
    f.add("DHouse", 3, "I_III");
    f.add("DObj", 3, "I_III");
    f.add("DAsp", 3, "I_III");
    f.add("DNak", 3, "I_III");
    f.add("_Xnp", 0, "I_");
    f.add("_Xnf", 0, "I_");
    f.add("Dlg", 0, "I_");
    f.add("Mouse", 1, "I_I");
    f.add("_WN", 0, "I_");
    f.add("_Wnn", 0, "I_");
    f.add("_Wh", 0, "I_");
    f.add("_Wt", 0, "I_");
    f.add("_Wo", 0, "I_");
    f.add("_Wo0", 0, "I_");
    f.add("_Wo3", 0, "I_");
    f.add("_WZ", 0, "I_");
    f.add("PC", 0, "I_");
    f.add("WIN", 0, "I_");
    f.add("X11", 0, "I_");
    f.add("WCLI", 0, "I_");
    f.add("WSETUP", 0, "I_");
    f.add("JPLWEB", 0, "I_");
    f.add("Var", 1, "E_I");
    f.add("Do", 2, "E_XE");
    f.add("Do2", 3, "E_XXE");
    f.add("Do3", 4, "E_XXXE");
    f.add("If", 2, "E_IX");
    f.add("IfElse", 3, "E_IXX");
    f.add("DoCount", 2, "E_IX");
    f.add("While", 2, "E_XE");
    f.add("DoWhile", 2, "E_XE");
    f.add("For", 4, "I_IIIX");
    f.add("Macro", 1, "E_I");
    f.add("Switch", 1, "I_I");
    f.add("RndSeed", 1, "I_I");
    f.add("Assign", 2, "E_IE");
    f.add("=", 2, "E_IE");
    f.add("=A", 1, "E_E");
    f.add("=B", 1, "E_E");
    f.add("=C", 1, "E_E");
    f.add("=D", 1, "E_E");
    f.add("=E", 1, "E_E");
    f.add("=F", 1, "E_E");
    f.add("=G", 1, "E_E");
    f.add("=H", 1, "E_E");
    f.add("=I", 1, "E_E");
    f.add("=J", 1, "E_E");
    f.add("=K", 1, "E_E");
    f.add("=L", 1, "E_E");
    f.add("=M", 1, "E_E");
    f.add("=N", 1, "E_E");
    f.add("=O", 1, "E_E");
    f.add("=P", 1, "E_E");
    f.add("=Q", 1, "E_E");
    f.add("=R", 1, "E_E");
    f.add("=S", 1, "E_E");
    f.add("=T", 1, "E_E");
    f.add("=U", 1, "E_E");
    f.add("=V", 1, "E_E");
    f.add("=W", 1, "E_E");
    f.add("=X", 1, "E_E");
    f.add("=Y", 1, "E_E");
    f.add("=Z", 1, "E_E");
}

}
