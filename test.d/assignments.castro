var pp[20] @100;
macro lval_read {
    a = z;
    b = *z;
    //ERR// c = z[3];
    a = pp;
    b = *pp;
    c = pp[3];
    a = z + 7;
    b = *z + 7;
    //ERR// c = z[3] + 7;
}

macro lval_write {
    a = z;
    *a = z;
    //ERR// a[3] = z;
    pp = z;
    *pp = z;
    pp[3] = z;
}

macro assign_array {
    //ERR// a[3] |= z;
    pp[3] |= z;

    //ERR// a[b + c] |= z;
    //ERR// a[b + 3] |= z;
    //ERR// a[3 + b] |= z;

    pp[b + c] |= z;
    pp[b + 3] |= z;
    pp[3 + b] |= z;
}

macro assign_op {
    a |= z;
    *a |= z;
    //ERR// a[3] |= z;
    pp |= z;
    *pp |= z;
    pp[3] |= z;
}

macro assign_op_extra_1 {
    a <<= z + x;
    *a <<= z + x;
    //ERR// a[3] <<= z + x;
}

macro assign_op_extra_2 {
    (a <<= z) + x;
    (*a <<= z) + x;
    //ERR// (a[3] <<= z) + x;
}

macro assign_op_extra_3 {
    (a <<= z) + 7;
    (*a <<= z) + 7;
    //ERR// (a[3] <<= z) + 7;
}

macro assign_op_extra_4 {
    (a <<= z) + *x;
    (*a <<= z) + *x;
    //ERR// (a[3] <<= z) + *x;
}


macro t1 {
    for(a = 3; 7) d += 1;
    for(*a = 3; 7) d += 1;
    //ERR// for(a[13] = 3; 7) d += 1;
}
macro t2 {
    for(pp = 3; 7) d += 1;
    for(*pp = 3; 7) d += 1;
    for(pp[13] = 3; 7) d += 1;
}
macro t3 {
    a = 3;
    *a = 3;
    //ERR// a[7] = 3;
    pp = 3;
    *pp = 3;
    pp[7] = 3;
}
macro t4 {
    a += 3;
    *a += 3;
    //ERR// a[7] += 3;
    pp += 3;
    *pp += 3;
    pp[7] += 3;
}

macro t5 {
    // optim to avoid using Neg instruction
    a = - 7;
    a = b + - 11;
    a = b + - 7 + c;
    a = -3 -4;
    a = 4 + 3 + 4;
    z  = &pp[10];
}

